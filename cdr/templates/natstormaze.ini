[data]
X_train = {data_path}/MAZE_ns/natstormaze_X.csv
X_dev = {data_path}/MAZE_ns/natstormaze_X.csv
X_test = {data_path}/MAZE_ns/natstormaze_X.csv
y_train = {data_path}/MAZE_ns/natstormaze_y_train.csv
y_dev = {data_path}/MAZE_ns/natstormaze_y_dev.csv
y_test = {data_path}/MAZE_ns/natstormaze_y_test.csv
series_ids = subject docid
sep = ' '
history_length = 32
t_delta_cutoff = 60
filters = rt > 100; rt < 5000; isattentive = 1; startofsentence != 1; endofsentence != 1; incorrect = 0{cutoff_filter}

[global_settings]
outdir = {results_path}{cutoff_suffix}/natstormaze

[cdr_settings]
predictive_distribution_map = exgaussianinvrate
rescale_t_delta = False
nn_regularizer_scale = 5
regularize_final_layer = False
n_units = 32
n_layers = 2
dropout_rate = 0.1
fixed_dropout = True
n_ensemble = 10
early_stopping = True
eval_freq = 10
learning_rate = 0.001
convergence_n_iterates = 250
plot_step_default = sd
plot_n_time_units = 2

[irf_name_map]
rt = RT
rate = Rate
endofsentence = End of sentence
incorrect = Incorrect
wlen = Word length
unigramsurpOWT = Unigram surprisal
fwprobopenwebtext2surp = Bigram surprisal
fwprobopenwebtext3surp = Trigram surprisal
gpt = GPT-2 surprisal


# Overall effects

[model_main]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN()) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(ran=T)) | subject)  + (1 | docid:sentid:sentpos)

[model_main-unigramsurpOWT]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + gpt, NN()) + (C(rate + endofsentence + incorrect + wlen + gpt, NN(ran=T)) | subject)  + (1 | docid:sentid:sentpos)

[model_main-gpt]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT, NN()) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT, NN(ran=T)) | subject)  + (1 | docid:sentid:sentpos)

[model_main-unigramsurpOWT-gpt]
formula = rt ~ C(rate + endofsentence + incorrect + wlen, NN()) + (C(rate + endofsentence + incorrect + wlen, NN(ran=T)) | subject)  + (1 | docid:sentid:sentpos)


# Interactions

[model_nointeraction]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT, NN()) + C(rate + endofsentence + incorrect + wlen + gpt, NN()) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT, NN(ran=T)) + C(rate + endofsentence + incorrect + wlen + gpt, NN(ran=T)) | subject) + (1 | docid:sentid:sentpos)

[model_yesinteraction]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN()) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN()) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(ran=T)) | subject) + (1 | docid:sentid:sentpos)


# Distributional Effects

[model_dist]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[mu])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[sigma])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[beta])) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[mu], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[sigma], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[beta], ran=T)) | subject) + (1 | docid:sentid:sentpos)

[model_dist-unigramsurpOWTmu]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + gpt, NN(pred_params=[mu])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[sigma])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[beta])) + (C(rate + endofsentence + incorrect + wlen + gpt, NN(pred_params=[mu], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[sigma], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[beta], ran=T)) | subject) + (1 | docid:sentid:sentpos)

[model_dist-unigramsurpOWTsigma]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[mu])) + C(rate + endofsentence + incorrect + wlen + gpt, NN(pred_params=[sigma])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[beta])) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[mu], ran=T)) + C(rate + endofsentence + incorrect + wlen + gpt, NN(pred_params=[sigma], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[beta], ran=T)) | subject) + (1 | docid:sentid:sentpos)

[model_dist-unigramsurpOWTbeta]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[mu])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[sigma])) + C(rate + endofsentence + incorrect + wlen + gpt, NN(pred_params=[beta])) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[mu], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[sigma], ran=T)) + C(rate + endofsentence + incorrect + wlen + gpt, NN(pred_params=[beta], ran=T)) | subject) + (1 | docid:sentid:sentpos)

[model_dist-gptmu]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT, NN(pred_params=[mu])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[sigma])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[beta])) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT, NN(pred_params=[mu], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[sigma], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[beta], ran=T)) | subject) + (1 | docid:sentid:sentpos)

[model_dist-gptsigma]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[mu])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT, NN(pred_params=[sigma])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[beta])) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[mu], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT, NN(pred_params=[sigma], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[beta], ran=T)) | subject) + (1 | docid:sentid:sentpos)

[model_dist-gptbeta]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[mu])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[sigma])) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT, NN(pred_params=[beta])) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[mu], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt, NN(pred_params=[sigma], ran=T)) + C(rate + endofsentence + incorrect + wlen + unigramsurpOWT, NN(pred_params=[beta], ran=T)) | subject) + (1 | docid:sentid:sentpos)


# Bigrams

[model_bigram]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt + fwprobopenwebtext2surp, NN()) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt + fwprobopenwebtext2surp, NN(ran=T)) | subject)  + (1 | docid:sentid:sentpos)

[model_bigram-unigramsurpOWT]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + gpt + fwprobopenwebtext2surp, NN()) + (C(rate + endofsentence + incorrect + wlen + gpt + fwprobopenwebtext2surp, NN(ran=T)) | subject)  + (1 | docid:sentid:sentpos)

[model_bigram-gpt]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + fwprobopenwebtext2surp, NN()) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + fwprobopenwebtext2surp, NN(ran=T)) | subject)  + (1 | docid:sentid:sentpos)


# Trigrams

[model_trigram]
formula = rt ~ C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt + fwprobopenwebtext2surp + fwprobopenwebtext3surp, NN()) + (C(rate + endofsentence + incorrect + wlen + unigramsurpOWT + gpt + fwprobopenwebtext2surp + fwprobopenwebtext3surp, NN(ran=T)) | subject)  + (1 | docid:sentid:sentpos)


# Intercept only

[model_intercept]
formula = rt ~ 1

