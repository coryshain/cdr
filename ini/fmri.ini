[data]
series_ids = subject docid fROI
split_ids = splitVal15
modulus = 4
X_train = ../data/fMRI_ns/LANG_X.csv;../data/fMRI_ns/LANG_SP.csv
X_dev = ../data/fMRI_ns/LANG_X.csv;../data/fMRI_ns/LANG_SP.csv
X_test = ../data/fMRI_ns/LANG_X.csv;../data/fMRI_ns/LANG_SP.csv
y_train = ../data/fMRI_ns/LANG_y_train.csv
y_dev = ../data/fMRI_ns/LANG_y_dev.csv
y_test = ../data/fMRI_ns/LANG_y_test.csv
history_length = 128

[global_settings]
outdir = ../results/cdrnn_journal/fmri

[cdr_settings]
eval_freq = 10

ranef_to_fixef_prior_sd_ratio = 0.01
ranef_regularizer_scale = 1000
reference_time = 5
plot_n_time_units = 30
generate_irf_surface_plots = False
generate_nonstationarity_surface_plots = False
generate_curvature_plots = False
plot_step_default = sd

[irf_name_map]
rate = Rate
unigramsurp = Unigram surprisal
fwprob5surp = 5-gram surprisal
soundPower100ms = Sound power
BOLD = %% BOLD signal change

[model_CDR_main]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rep2]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rep3]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rep4]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rep5]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_linear]
input_dependent_irf = False
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_stationary]
nonstationary = False
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_homoskedastic]
use_distributional_regression = False
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rec]
n_units_rnn = inherit
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_u16]
n_units = 16
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_u64]
n_units = 64
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_l1]
n_layers = 1
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_l3]
n_layers = 3
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_r1]
nn_regularizer_scale = 01
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_r25]
nn_regularizer_scale = 25
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rr100]
ranef_regularizer_scale = 100
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rr10000]
ranef_regularizer_scale = 10000
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_d0.05]
dropout_rate = 0.05
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_d0.2]
dropout_rate = 0.2
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_lr0.001]
learning_rate = 0.001
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_lr0.009]
learning_rate = 0.009
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_b512]
minibatch_size = 512
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_b2048]
minibatch_size = 2048
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

