[data]
X_train = ../data/SPR_ns/natstor_X.csv
X_dev = ../data/SPR_ns/natstor_X.csv
X_test = ../data/SPR_ns/natstor_X.csv
y_train = ../data/SPR_ns/natstor_y_train.csv
y_dev = ../data/SPR_ns/natstor_y_dev.csv
y_test = ../data/SPR_ns/natstor_y_test.csv
series_ids = subject docid
split_ids = subject sentid
modulus = 4
history_length = 128
filters = fdur > 100; fdur < 3000; correct > 4; startofsentence != 1; endofsentence != 1; subjectnunique > 100

[global_settings]
outdir = ../results/cdrnn_journal/natstor_log

[cdr_settings]
eval_freq = 10

generate_irf_surface_plots = False
generate_nonstationarity_surface_plots = False
generate_curvature_plots = False
plot_step_default = sd

[irf_name_map]
rate = Rate
wlen = Word length
unigramsurp = Unigram surprisal
fwprob5surp = 5-gram surprisal
fdur = RT (log-ms)

[model_CDR_main]
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rep2]
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rep3]
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rep4]
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rep5]
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_linear]
input_dependent_irf = False
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_stationary]
nonstationary = False
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_homoskedastic]
use_distributional_regression = False
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rec]
n_units_rnn = inherit
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_u16]
n_units = 16
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_u64]
n_units = 64
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_l1]
n_layers = 1
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_l3]
n_layers = 3
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_r1]
nn_regularizer_scale = 01
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_r25]
nn_regularizer_scale = 25
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rr1]
ranef_regularizer_scale = 0.1
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_rr100]
ranef_regularizer_scale = 10
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_d0.05]
dropout_rate = 0.05
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_d0.2]
dropout_rate = 0.2
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_lr0.001]
learning_rate = 0.001
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_lr0.009]
learning_rate = 0.009
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_b512]
minibatch_size = 512
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_b2048]
minibatch_size = 2048
formula = log(fdur) ~ C(rate + wlen + unigramsurp + fwprob5surp, NN()) + (C(rate + wlen + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

# Baselines

[model_LMEnoS]
formula = log(fdur) ~ z.(trial) + z.(sentpos) + z.(wlen) + z.(unigramsurp) + z.(fwprob5surp) + (1 + z.(trial) + z.(sentpos) + z.(wlen) + z.(unigramsurp) + z.(fwprob5surp) | subject)

[model_LMEfullS]
formula = log(fdur) ~ z.(trial) + z.(sentpos) + z.(wlen) + z.(wlenS1) + z.(wlenS2) + z.(wlenS3) + + z.(unigramsurp) + z.(unigramsurpS1) + z.(unigramsurpS2) + z.(unigramsurpS3) + z.(fwprob5surp) + z.(fwprob5surpS1) + z.(fwprob5surpS2) + z.(fwprob5surpS3) + (1 + z.(trial) + z.(sentpos) + z.(wlen) + z.(wlenS1) + z.(wlenS2) + z.(wlenS3) + z.(unigramsurp) + z.(unigramsurpS1) + z.(unigramsurpS2) + z.(unigramsurpS3) + z.(fwprob5surp) + z.(fwprob5surpS1) + z.(fwprob5surpS2) + z.(fwprob5surpS3) | subject)

[model_GAMnoS]
formula = log(fdur) ~ s(z_trial) + s(z_sentpos) + s(z_wlen) + s(z_unigramsurp) + s(z_fwprob5surp) + s(subject, bs="re") + s(z_trial, subject, bs="re") + s(z_sentpos, subject, bs="re") + s(z_wlen, subject, bs="re") + s(z_unigramsurp, subject, bs="re") + s(z_fwprob5surp, subject, bs="re")

[model_GAMfullS]
formula = log(fdur) ~ s(z_trial) + s(z_sentpos) + s(z_wlen) + s(z_wlenS1) + s(z_wlenS2) + s(z_wlenS3) + s(z_unigramsurp) + s(z_unigramsurpS1) + s(z_unigramsurpS2) + s(z_unigramsurpS3) + s(z_fwprob5surp) + s(z_fwprob5surpS1) + s(z_fwprob5surpS2) + s(z_fwprob5surpS3) + s(subject, bs="re") + s(z_trial, subject, bs="re") + s(z_sentpos, subject, bs="re") + s(z_wlen, subject, bs="re") + s(z_wlenS1, subject, bs="re") + s(z_wlenS2, subject, bs="re") + s(z_wlenS3, subject, bs="re") + s(z_unigramsurp, subject, bs="re") + s(z_unigramsurpS1, subject, bs="re") + s(z_unigramsurpS2, subject, bs="re") + s(z_unigramsurpS3, subject, bs="re") + s(z_fwprob5surp, subject, bs="re") + s(z_fwprob5surpS1, subject, bs="re") + s(z_fwprob5surpS2, subject, bs="re") + s(z_fwprob5surpS3, subject, bs="re")
