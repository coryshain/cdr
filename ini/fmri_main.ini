[data]
series_ids = subject docid fROI
split_ids = splitVal15
modulus = 4
X_train = ../data/fMRI_ns/LANG_X.csv;../data/fMRI_ns/LANG_SP.csv
X_dev = ../data/fMRI_ns/LANG_X.csv;../data/fMRI_ns/LANG_SP.csv
X_test = ../data/fMRI_ns/LANG_X.csv;../data/fMRI_ns/LANG_SP.csv
y_train = ../data/fMRI_ns/LANG_y_train.csv
y_dev = ../data/fMRI_ns/LANG_y_dev.csv
y_test = ../data/fMRI_ns/LANG_y_test.csv
history_length = 128

[global_settings]
outdir = ../results/cdrnn_journal/fmri_main

[cdr_settings]
n_ensemble = 10
eval_freq = 10
early_stopping = True
n_units = 32
dropout_rate = 0.2
ranef_to_fixef_prior_sd_ratio = 0.01
ranef_regularizer_scale = 1000
convergence_n_iterates = 250
reference_time = 5
plot_n_time_units = 30
generate_irf_surface_plots = False
generate_nonstationarity_surface_plots = False
generate_curvature_plots = False
plot_step_default = sd

[irf_name_map]
rate = Rate
unigramsurp = Unigram surprisal
fwprob5surp = 5-gram surprisal
soundPower100ms = Sound power
BOLD = %% BOLD signal change

[model_CDR_nhst]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_nhst.stationary]
nonstationary = False
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_nhst-soundPower100ms]
formula = BOLD ~ C(rate + unigramsurp + fwprob5surp, NN()) + (C(rate + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_nhst-unigramsurp]
formula = BOLD ~ C(rate + soundPower100ms + fwprob5surp, NN()) + (C(rate + soundPower100ms + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_nhst-fwprob5surp]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp, NN()) + (C(rate + soundPower100ms + unigramsurp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp, NN(ran=T)) | subject)

[model_CDR_nhst-fwprob5surp-unigramsurp]
formula = BOLD ~ C(rate + soundPower100ms, NN()) + (C(rate + soundPower100ms, NN(ran=T)) | fROI) + (C(rate + soundPower100ms, NN(ran=T)) | subject)

[model_CDR_nhst-soundPower100ms.nonlin]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(inputs_to_drop=[soundPower100ms])) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(inputs_to_drop=[soundPower100ms], ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(inputs_to_drop=[soundPower100ms], ran=T)) | subject)

[model_CDR_nhst-unigramsurp.nonlin]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(inputs_to_drop=[unigramsurp])) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(inputs_to_drop=[unigramsurp], ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(inputs_to_drop=[unigramsurp], ran=T)) | subject)

[model_CDR_nhst-fwprob5surp.nonlin]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(inputs_to_drop=[fwprob5surp])) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(inputs_to_drop=[fwprob5surp], ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(inputs_to_drop=[fwprob5surp], ran=T)) | subject)

[model_CDR_nhst-nointeraction.sp.uni]
formula = BOLD ~ C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1)) + C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf2)) + (C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf2, ran=T)) | fROI) + (C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf2, ran=T)) | subject)

[model_CDR_nhst-nointeraction.sp.fwp]
formula = BOLD ~ C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1)) + C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf2)) + (C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf2, ran=T)) | fROI) + (C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf2, ran=T)) | subject)

[model_CDR_nhst-nointeraction]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf1)) + C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf2)) + (C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf1, ran=T)) + C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf2, ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf1, ran=T)) + C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf2, ran=T)) | subject)

[model_CDR_nhst-yesinteraction]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(irf_id=irf1)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(irf_id=irf2)) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(irf_id=irf2, ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(irf_id=irf2, ran=T)) | subject)

[model_CDR_nhst.spnonstationary]
formula = BOLD ~ C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1)) + C(soundPower100ms, NN(inputs_to_add=[unigramsurp, fwprob5surp], irf_id=irf2)) + (C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(soundPower100ms, NN(inputs_to_add=[unigramsurp, fwprob5surp], irf_id=irf2, ran=T)) | fROI) + (C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(soundPower100ms, NN(inputs_to_add=[unigramsurp, fwprob5surp], irf_id=irf2, ran=T)) | subject)

[model_CDR_nhst.spstationary]
formula = BOLD ~ C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1)) + C(soundPower100ms, NN(inputs_to_add=[unigramsurp, fwprob5surp], nonstationary=False, irf_id=irf2)) + (C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(soundPower100ms, NN(inputs_to_add=[unigramsurp, fwprob5surp], nonstationary=False, irf_id=irf2, ran=T)) | fROI) + (C(rate + unigramsurp + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(soundPower100ms, NN(inputs_to_add=[unigramsurp, fwprob5surp], nonstationary=False, irf_id=irf2, ran=T)) | subject)

[model_CDR_nhst.uninonstationary]
formula = BOLD ~ C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf1)) + C(unigramsurp, NN(inputs_to_add=[soundPower100ms, fwprob5surp], irf_id=irf2)) + (C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(unigramsurp, NN(inputs_to_add=[soundPower100ms, fwprob5surp], irf_id=irf2, ran=T)) | fROI) + (C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(unigramsurp, NN(inputs_to_add=[soundPower100ms, fwprob5surp], irf_id=irf2, ran=T)) | subject)

[model_CDR_nhst.unistationary]
formula = BOLD ~ C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf1)) + C(unigramsurp, NN(inputs_to_add=[soundPower100ms, fwprob5surp], nonstationary=False, irf_id=irf2)) + (C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(unigramsurp, NN(inputs_to_add=[soundPower100ms, fwprob5surp], nonstationary=False, irf_id=irf2, ran=T)) | fROI) + (C(rate + soundPower100ms + fwprob5surp, NN(irf_id=irf1, ran=T)) + C(unigramsurp, NN(inputs_to_add=[soundPower100ms, fwprob5surp], nonstationary=False, irf_id=irf2, ran=T)) | subject)

[model_CDR_nhst.fwnonstationary]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf1)) + C(fwprob5surp, NN(inputs_to_add=[soundPower100ms, unigramsurp], irf_id=irf2)) + (C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf1, ran=T)) + C(fwprob5surp, NN(inputs_to_add=[soundPower100ms, unigramsurp], irf_id=irf2, ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf1, ran=T)) + C(fwprob5surp, NN(inputs_to_add=[soundPower100ms, unigramsurp], irf_id=irf2, ran=T)) | subject)

[model_CDR_nhst.fwstationary]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf1)) + C(fwprob5surp, NN(inputs_to_add=[soundPower100ms, unigramsurp], nonstationary=False, irf_id=irf2)) + (C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf1, ran=T)) + C(fwprob5surp, NN(inputs_to_add=[soundPower100ms, unigramsurp], nonstationary=False, irf_id=irf2, ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp, NN(irf_id=irf1, ran=T)) + C(fwprob5surp, NN(inputs_to_add=[soundPower100ms, unigramsurp], nonstationary=False, irf_id=irf2, ran=T)) | subject)

[model_CDR_nhst.linear]
input_dependent_irf = False
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_nhst.linear-unigramsurp]
input_dependent_irf = False
formula = BOLD ~ C(rate + soundPower100ms + fwprob5surp, NN()) + (C(rate + soundPower100ms + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_nhst.linear-fwprob5surp]
input_dependent_irf = False
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp, NN()) + (C(rate + soundPower100ms + unigramsurp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp, NN(ran=T)) | subject)

[model_CDR_nhst.linear.nodist]
input_dependent_irf = False
use_distributional_regression = False
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN()) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_nhst.linear.nodist-unigramsurp]
input_dependent_irf = False
use_distributional_regression = False
formula = BOLD ~ C(rate + soundPower100ms + fwprob5surp, NN()) + (C(rate + soundPower100ms + fwprob5surp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + fwprob5surp, NN(ran=T)) | subject)

[model_CDR_nhst.linear.nodist-fwprob5surp]
input_dependent_irf = False
use_distributional_regression = False
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp, NN()) + (C(rate + soundPower100ms + unigramsurp, NN(ran=T)) | fROI) + (C(rate + soundPower100ms + unigramsurp, NN(ran=T)) | subject)

[model_CDR_nhst.dist]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu])) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) | subject)

[model_CDR_nhst.dist-soundPower100msmu]
formula = BOLD ~ C(rate + unigramsurp + fwprob5surp, NN(pred_params=[mu])) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) + (C(rate + unigramsurp + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) | fROI) + (C(rate + unigramsurp + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) | subject)

[model_CDR_nhst.dist-unigramsurpmu]
formula = BOLD ~ C(rate + soundPower100ms + fwprob5surp, NN(pred_params=[mu])) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) + (C(rate + soundPower100ms + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) | fROI) + (C(rate + soundPower100ms + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) | subject)

[model_CDR_nhst.dist-unigramsurpsigma]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu])) + C(rate + soundPower100ms + fwprob5surp, NN(pred_params=[sigma])) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + fwprob5surp, NN(pred_params=[sigma])) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + fwprob5surp, NN(pred_params=[sigma])) | subject)

[model_CDR_nhst.dist-soundPower100mssigma]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu])) + C(rate + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) | subject)

[model_CDR_nhst.dist-fwprob5surpmu]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp, NN(pred_params=[mu])) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) + (C(rate + soundPower100ms + unigramsurp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) | fROI) + (C(rate + soundPower100ms + unigramsurp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[sigma])) | subject)

[model_CDR_nhst.dist-fwprob5surpsigma]
formula = BOLD ~ C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu])) + C(rate + soundPower100ms + unigramsurp, NN(pred_params=[sigma])) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + unigramsurp, NN(pred_params=[sigma])) | fROI) + (C(rate + soundPower100ms + unigramsurp + fwprob5surp, NN(pred_params=[mu], ran=T)) + C(rate + soundPower100ms + unigramsurp, NN(pred_params=[sigma])) | subject)
